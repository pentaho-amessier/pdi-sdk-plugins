<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>pentaho-kettle</groupId>
    <artifactId>kettle-sdk-plugin-parent</artifactId>
    <version>8.1.0.0-SNAPSHOT</version>
  </parent>
  <artifactId>kettle-sdk-embedding-samples</artifactId>
  <version>8.1.0.0-SNAPSHOT</version>
  <name>Pentaho Data Integration SDK Embedding Samples</name>

  <dependencies>
    <dependency>
      <groupId>pentaho-kettle</groupId>
      <artifactId>kettle-core</artifactId>
      <version>${pdi.version}</version>
    </dependency>
    <dependency>
      <groupId>pentaho-kettle</groupId>
      <artifactId>kettle-engine</artifactId>
      <version>${pdi.version}</version>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-platform-extensions</artifactId>
      <version>${platform.version}</version>
    </dependency>
    <dependency>
     <groupId>org.pentaho.di</groupId>
     <artifactId>pdi-ce</artifactId>
     <version>${pdi.version}</version>
     <type>zip</type>
   </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <!-- Unpack the pdi-ce dependency so we can copy resources from it -->
          <execution>
            <id>unpack-pdi-ce</id>
            <phase>process-resources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/pdi-ce</outputDirectory>
              <includeArtifactIds>pdi-ce</includeArtifactIds>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <!-- copy the contents of the data-integration/system folder into <basedir>/system, so that the kettle
               environment can be initialized properly -->
          <execution>
            <id>copy-data-integration-system</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.basedir}/system</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.build.directory}/pdi-ce/data-integration/system</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <!-- copy the contents of the data-integration/plugins folder into <basedir>/plugins, so that the kettle
               environment can be initialized properly -->
          <execution>
            <id>copy-data-integration-plugins</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.basedir}/plugins</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.build.directory}/pdi-ce/data-integration/plugins</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <!-- copy the pdi-ce/data-integration/classes files into the <basedir>/classes for convenience -->
          <execution>
            <id>copy-pdi-ce-classes</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.basedir}/classes</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.build.directory}/pdi-ce/data-integration/classes</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <!-- copy the contents of the data-integration/lib folder into <basedir>/lib for convenience -->
          <execution>
            <id>copy-data-integration-lib</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.basedir}/lib</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.build.directory}/pdi-ce/data-integration/lib</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <!-- copy the contents of the data-integration/libswt folder into <basedir>/libswt for convenience -->
          <execution>
            <id>copy-data-integration-libswt</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.basedir}/libswt</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.build.directory}/pdi-ce/data-integration/libswt</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- additional cleanup is needed, since we're placing files outside of the build folder-->
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${project.basedir}</directory>
              <includes>
                <include>classes</include>
                <include>classes/**/*</include>
                <include>system</include>
                <include>system/**/*</include>
                <include>plugins</include>
                <include>plugins/**/*</include>
                <include>lib</include>
                <include>lib/**/*</include>
                <include>libswt</include>
                <include>libswt/**/*</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!-- karaf doesn't play nice with manifest-only classpath jars; for more details, see:
               http://maven.apache.org/surefire/maven-surefire-plugin/examples/class-loading.html -->
          <useSystemClassLoader>false</useSystemClassLoader>
          <useManifestOnlyJar>false</useManifestOnlyJar>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
